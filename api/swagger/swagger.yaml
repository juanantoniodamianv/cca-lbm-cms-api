swagger: "2.0"
info: 
  version: "1.0.0"
  title: "CCA API"
host: localhost:1337
basePath: /v1
schemes: 
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /user/signup:
    post:
      description: Sign Up User Account
      summary: Sign Up 
      operationId: signUpAccount
      parameters: 
      - name: email
        dataType: string
        in: body
        required: true
        description: Your email
      - name: password
        dataType: string
        in: body
        required: true
        description: Your password
      - name: confirmPassword
        dataType: string
        in: body
        required: true
        description: Confirm your password
      - name: firstName
        dataType: string
        in: body
        required: false
        description: Your first name
      - name: lastName
        dataType: string
        in: body
        required: false
        description: Your last name
      - name: userType
        dataType: string
        in: body
        required: true
        description: Type of user account (admin or normal)
      - name: organization
        dataType: string
        in: body
        required: false
        description: Your organization
      responses:
        200:
          description: User created successfully.
          schema:
            type: object
            properties:
              email:
                type: string
              createdAt:
                type: string
              updatedAt:
                type: string
              id:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              token:
                type: string
              userType:
                type: string
              organization:
                type: string
        401:
          description: Password doesn't match.
        400:
          description: User could not be created.
  /user/login:
    post:
      description: Access a user account
      summary: User Account Access
      operationId: loginAccount
      parameters:
      - name: email
        dataType: string
        in: body
        required: true
        description: Your email
      - name: password
        dataType: string
        in: body
        required: true
        description: Your password
      responses:
        "200":
          description: Successfully signed in
          schema:
            type: object
            properties:
              email:
                type: string
              createdAt:
                type: string
              updatedAt:
                type: string
              id:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              token:
                type: string
              userType:
                type: string
              organization:
                type: string
        401:
          description: Invalid email or password.
  /users:
    get:
      summary: Get all users account
      operationId: getAllUsers
      parameters:
      - name: token
        dataType: string
        paramType: header
        required: true
        description: Authorization bearer token
      responses:
        200:
          description: Get all users account.
        401:
          description: No authorization header was found.
  /user/{id}:
    get:
      summary: Get user account
      operationId: getUser
      parameters:
      - name: id
        dataType: string
        paramType: path
        required: true
        description: The user id
      - name: token
        dataType: string
        paramType: header
        required: true
        description: Authorization bearer token
    put:
      summary: Update user account
      operationId: updateUser
      parameters:
      - name: password
        dataType: string
        in: body
        required: true
        description: Your password
      - name: confirmPassword
        dataType: string
        in: body
        required: true
        description: Confirm your password
      - name: firstName
        dataType: string
        in: body
        required: false
        description: Your first name
      - name: lastName
        dataType: string
        in: body
        required: false
        description: Your last name
      - name: userType
        dataType: string
        in: body
        required: true
        description: Type of user account (admin or normal)
      - name: organization
        dataType: string
        in: body
        required: false
        description: Your organization
      - name: token
        dataType: string
        in: header
        required: true
        description: Authorization bearer token
      responses:
        200:
          description: User updated successfully.
        400:
          description: User could not be updated.     
          
  /forgot:
    post:
      summary: Forgot password
      operationId: forgotPassword
      parameters:
      - name: email
        dataType: string
        in: body
        required: true
        description: Your email
      responses:
        200:
          description: The instruction to reset your password has been sent to your email.
        401:
          description: This email is not registered.
  /reset/{token}:
    post:
      summary: Reset user password account
      operationId: resetPassword
      parameters:
      - name: token
        dataType: string
        in: path
        required: true
        description: The token what has been sended on your email.
      - name: password
        dataType: string
        in: body
        required: true
        description: Your password
      - name: confirmPassword
        dataType: string
        in: body
        required: true
        description: Confirm your password
      responses:
        200:
          description: Password successfully changed.
        400:
          description: Password could not be updated.
        401:
          description: The provided password token is invalid, expired, or has already been used.